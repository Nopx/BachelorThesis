package JolleeB.BachelorT.Algorithmen;

public class MRFOptimizer {

	public float[] optimizeRandomField(float[] field, int width, int height){
		if(field.length != width*height) throw new IllegalArgumentException();
		int changeCounter =1;
		while(changeCounter >0){
			changeCounter =0;
			for(int y =0; y < height; y++){
				for(int x =0; x < width; x++){
					for(int lFactor =-3; lFactor<=3; lFactor+=3){
						for(int kFactor =-3; kFactor<=3;kFactor+=3){
							int l = lFactor*3;
							int k = kFactor*3;
							int newY = y+l;
							int newX = x+k;
							if(newY <0 || newY >=height)newY-=l;
							if(newX <0 || newX >=width )newX-=k;
							int newPos = newY*width+newX;
						}
					}
				}
			}
		}
		return null;
	}
}
