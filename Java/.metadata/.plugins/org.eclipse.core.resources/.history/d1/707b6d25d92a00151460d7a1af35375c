package JolleeB.BachelorT.UI;

import JolleeB.BachelorT.Algorithmen.AlgorithmNames;
import JolleeB.BachelorT.Algorithmen.AlgorithmusController;

public class App 
{
    public static void main( String[] args )
    {
    	
    	
    	
//    	String inputFile = "../../Videos/Tests/Walkingstudents";
//    	String fileType = ".avi";
//    	String outPutSuffix = "GMMMRF";
//    	String inputFileString = inputFile+fileType;
//    	String outputFileString = inputFile+outPutSuffix+fileType;
//    	try {
//    		AlgorithmusController controller = new AlgorithmusController(inputFileString, outputFileString);
//    		controller.start("gmmmrf", 5, fileType);
//    	} catch (org.bytedeco.javacv.FrameGrabber.Exception e) {
//    		System.out.println("FAILED");
//    	} catch (IllegalArgumentException e) {
//    		System.out.println("FAILED");
//    		e.printStackTrace();
//    	} catch (org.bytedeco.javacv.FrameRecorder.Exception e) {
//    		System.out.println("FAILED");
//    		e.printStackTrace();
//    	}
//    	return;
    	if(args == null){
    		System.out.println("Type commands like this: ");
    		System.out.println("inputfile outputfile filetype method");
    		return;
    	}
    	if(args[0].equals("help")){
    		if(args.length ==1){
    			System.out.println("Type commands like this: ");
    			System.out.println("inputfile outputfile filetype method");
    		}
    		else{
    			System.out.println(AlgorithmNames.getDescription(args[1]));
    		}
    		return;
    	}
    	String inputFileString = args[0];
    	String fileType = "";
    	String outputFileString = args[1];
    	String methodName = args[3];
    	try {
			AlgorithmusController controller = new AlgorithmusController(inputFileString, outputFileString);
			controller.start(methodName, 5, fileType);
		} catch (org.bytedeco.javacv.FrameGrabber.Exception e) {
			System.out.println("Failed to get Frames, maybe the Video does not exist.");
		} catch (IllegalArgumentException e) {
			System.out.println("Invalid Methodname, possible Methodnames are: ");
			String[] names = AlgorithmNames.possibleNames();
			System.out.print(names[0]);
			for(int i =0; i < names.length;i++){
				System.out.print(", "+names[i]);
			}
			System.out.println();
		} catch (org.bytedeco.javacv.FrameRecorder.Exception e) {
			System.out.println("Failed to write Frames, maybe I can't write to the given location.");
			e.printStackTrace();
		}
        return;
    }
    
    private static void beginningMessage(){
    	System.out.println("");
    }
}
